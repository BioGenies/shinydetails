a = ggplot(Orange, aes(x = age)) + geom_col()
library(ggplot2)
library("ggplot2")
a = ggplot(Orange, aes(x = age)) + geom_col()
a
library("dplyr")
Orange$age
cut(Orange$age, sequence(100, 1600, 100))
age = Orange$age
cut(age, 2)
cut(age, 10)
table(cut(age, 10))
names(table(cut(age, 10)))
df =
data.frame(count = table(cut(age, 10)),
age = names(table(cut(age, 10))))
df
table(cut(age, 10))
table(cut(age, 10))[, 1]
table(cut(age, 10))[1]
data.frame(count = table(cut(age, 10)))
library(shiny); runApp('app1.R')
data.frame(count = table(cut(age, 10)))
df = data.frame(count = table(cut(age, 10)))
colnames(df) = c("age", "count")
df
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
df = data.frame(count = table(cut(age, 10)))
colnames(df) = c("age", "count")
df
wykres = df %>%
ggplot(aes(x = age, y = count))+
geom_col() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.5, size = 15))
wykres
ggplot_build(wykres)[["data"]][[1]]
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
format(age, scientific = FALSE)
numeric(format(age, scientific = FALSE))
as.numeric(format(age, scientific = FALSE))
df = data.frame(count = table(cut(format(Orange[["age"]], 10))))
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
runApp('app1.R')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data
data = Orange %>%
filter(age <= 1000, age <= 2)
df = data.frame(count = table(cut(data[["age"]], 10)))
data
runApp()
runApp()
runApp()
runApp()
5 < TRUE
5 > TRUE
Orange %>%
select("age")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame(a = 4, b = 7)
data.frame(a = 4, b = 7) -> m
m
m[3]
m$3
m$r
setwd("C:/Users/Kanti/Desktop/praktyki/HaDeX_components")
library(devtools)
document()
